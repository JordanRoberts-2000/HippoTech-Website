@tailwind base;
@tailwind components;
@tailwind utilities;

*{
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

  .checkbox-wrapper-4 .cbx {
    -webkit-user-select: none;
    user-select: none;
    cursor: pointer;
    border-radius: 6px;
    overflow: hidden;
    transition: all 0.2s ease;
    display: inline-block;
  }
  .checkbox-wrapper-4 .cbx:not(:last-child) {
    margin-right: 6px;
  }
  .checkbox-wrapper-4 .cbx span {
    float: left;
    vertical-align: middle;
    transform: translate3d(0, 0, 0);
  }
  .checkbox-wrapper-4 .cbx span:first-child svg {
    transform: translate3d(0, 0, 0);
  }
  /* .checkbox-wrapper-4 .cbx:hover span:first-child {
    border-color: rgb(20 184 166);
  } */
  .checkbox-wrapper-4 .inp-cbx:checked + .cbx span:first-child {
    background: rgb(20 184 166);
    border-color: rgb(20 184 166);
    animation: wave-4 0.4s ease;
  }
  .checkbox-wrapper-4 .inp-cbx:checked + .cbx span:first-child svg {
    stroke-dashoffset: 0;
  }
  @media screen and (max-width: 640px) {
    .checkbox-wrapper-4 .cbx {
      width: 100%;
      display: inline-block;
    }
  }
  @-moz-keyframes wave-4 {
    50% {
      transform: scale(0.9);
    }
  }
  @-webkit-keyframes wave-4 {
    50% {
      transform: scale(0.9);
    }
  }
  @-o-keyframes wave-4 {
    50% {
      transform: scale(0.9);
    }
  }
  @keyframes wave-4 {
    50% {
      transform: scale(0.9);
    }
  }


@keyframes spinning {
  from{
    transform: rotate(0deg);
  }
  to{
    transform: rotate(360deg);
  }
}

@keyframes colorChanger {
  100%,0%{
    stroke: green;
  }
  25%{
    stroke: red;
  }
  50%{
    stroke: orange;
  }
  75%{
    stroke: yellow;
  }
}

@keyframes dash {
  0%{
    stroke-dasharray: 1,200;
    stroke-dashoffset: 0;
  }
  50%{
    stroke-dasharray: 89,200;
    stroke-dashoffset: -35;
  }
  100%{
    stroke-dasharray: 89,200;
    stroke-dashoffset: -124;
  }
}

.loadingSvg{
  animation: spinning 1.5s linear infinite;
}

.loadingCircle{
  animation: colorChanger 6s ease-in-out infinite, dash 1.5s ease-in-out infinite;
}